//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using JetBrains.Annotations;
using TerminalGuiDesigner.UI.Windows;

namespace TerminalGuiDesigner; 
using System;
using Terminal.Gui;

/// <summary>
/// Pop-up editor for creating a <see cref="Point"/>.
/// </summary>
public partial class PointEditor : IValueGetterDialog {

    /// <summary>
    /// Gets a value indicating whether user cancelled the dialog before
    /// making a choice.
    /// </summary>
    public bool Cancelled {get;private set;}

    /// <summary>
    /// Gets user entered value for <see cref="Point.X"/>
    /// </summary>
    public float ResultX {get;private set;}

    /// <summary>
    /// Gets user entered value for <see cref="Point.Y"/>
    /// </summary>
    public float ResultY {get;private set;}

    [CanBeNull] public object Result => new PointF(ResultX, ResultY);

    /// <summary>
    /// Creates a new instance of the <see cref="PointEditor"/> class.
    /// </summary>
    /// <param name="x">Initial value to show in dialog for X.</param>
    /// <param name="y">Initial value to show in dialog for Y.</param>
    public PointEditor(float x, float y) {
        InitializeComponent();

        tbX.Text = x.ToString();
        tbY.Text = y.ToString();

        btnOk.Accepting += Ok;
        btnCancel.Accepting += Cancel;
    }

    private void Cancel(object sender, EventArgs e)
    {
        Cancelled = true;
        Application.RequestStop();
    }

    private void Ok(object sender, EventArgs e)
    {
        if(int.TryParse(tbX.Text.ToString(), out var x))
        {
            if(int.TryParse(tbY.Text.ToString(), out var y))
            {
                ResultX = x;
                ResultY = y;

                Cancelled = false;
                Application.RequestStop();
            }
            else
            {
                MessageBox.ErrorQuery(20,5,"Could no parse",$"Could not parse '{tbY.Text}'","Ok");
            }
        }
        else
        {
                MessageBox.ErrorQuery(20,5,"Could no parse",$"Could not parse '{tbX.Text}'","Ok");
        }
    }
}
